#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

/**********************************************************************************************/
/* Name: Santiago Sanchez
/* Date Created: 9/13/2024
/* Last Updated: 6/25/2025
/* Purpose: This code is a "Happy Numbers" prompt from Angus Croll's 
/* "If Hemingway Wrote JavaScript". Happy Numbers will take squares of the digits of numbers,
/* square, and add them together until it reaches a limit in attempts or reaches 1.  
/* The way this code is written is how I think H.P. Lovecraft would write it. 
/**********************************************************************************************/

const int ASSIMILATION = 20;

/*
* I take it upon myself to expunge this befoulment of God's creations
* in order to keep our domain unadulterated. I undertake this task
* well aware of the implications I may perish. The fears within me fester.
* Will my failure result solely in my death, or the extinction of my people.
*/
int eradicate(int savages)
{
	int encounters = 0;   // Though my mind is fortified, my body does not share the same indefatigability
	int brood = 0;        // The savage beings propagate at an incessant rate, tracking their quantity is paramount
	int stragglers = 0;   // Their numbers are large, separated or distant stragglers from the crowds will be multiply 

	// I begin the process that may lead to my demise
	while (encounters < ASSIMILATION)
	{
		// Extinguish the smaller groups
		int decimal = 10;            // How many I am capable of destroying
		stragglers = savages % 10;   // The elusive ones will escape
		brood = pow(stragglers, 2);  // Those left will continue to breed
		savages -= stragglers;       // Annihilate

		// Engage the larger groups
		while (savages > 0)
		{
			stragglers = (savages / decimal) % 10;
			brood += pow(stragglers, 2);      
			savages -= stragglers * decimal;
			decimal *= 10;					  
		}

		// Succeeding an encounter, will any remain?
		savages = brood;

		if (savages == 1)
		{
			// I have concluded my burden
			break;
		}
		// The culling is not complete
		encounters++;
	} // while(encounters)

	return savages;
	
} // eradicate

/*
* main(), the lands of my people, untainted and pure for a millenia. Where generations poured
* their souls into braving the cruelty of the elements so the offspring may prosper.
*/
int main()
{
	/*
	* A unknown quantity of savage beings are bestowed upon our sacred lands.
	* Their existence gone unbeknownst to us through tale or folklore. 
	*/
	int unfathomable_request;
	cout << "Unfathomable Request: ";

	// Punish ignorant requests 
	if (!(cin >> unfathomable_request))
	{
		cout << "Doom" << endl;
		cout << R"(#**++*#+***#********+********+**#**********+***#+***#********+****++**+*+****++***+*++++*++******+*#
*++++*++*++*+++*+*++**++*++++++#+++*+****+++*****++*++++*+**+++**+++*+++++++++++++++****##%%%%%%%*+#
*##%%%%%@@%%##********+**+++++++++*++++++++++=++==++*+*++=++++**+#%%%%%%%%@%@@@@@@%@@@@@@@@%%%@%#*++
**#%%%%@%@@@@@@@@%%%%%%%%#**##########**#****+=+-=*##*##+=++***+*###%%%%@%%%%@@@@@@@@@@@@@@%@@@@%*#*
#*#%%%@%@@@@@@@%@@@###%%##*+*****************+==--++***+==***++****#%%%%%%%%%%%%@@%%@@%%%@@%%@%%%**+
%##%%%%%%%%%%@%%%%#%#**#****=+*+*******+***++===--==+++=-=+*==++***####%%%%%%%%%%%%%%##%%@%%@%@%#++*
**#%%%%%%%%%%%%%%#****++***++==+++*++==--------------------=-=++******###%%%%%%%%%#**#%%%%%%%%%@#***
+*#%%%%###########****++=++++=-===------------------------------=++******##%%%%#++**#%%@@%%@%%%%*###
#*#%%%%#########*+***++++===+==-------------------=-------:-------=++++****##*=-=***%@@@@@%%%%%%#***
*##%%####**#####**+=++++===-----------------+=*%+*#####*=------------+*****+---++*#%@%%%%%%%%%%@**+*
#*#*++***********+++======---------------=--*%#+#%%#####***+-----------+*=---==*#%%%%%%%%%%%%%%@+**+
***##*+==******++++====-=------------::---=*%**#%%#%######***++-------------=+##%%%%%###%#%#%%%%*++=
%**#*****=-=+++++++====------------::---=-+#****#%%%######%##**++----------=+****##%#######%%%%#-+++
**********++=-==++=====----------------+**##=+*####%##%%%%%####*++=--------=+++*+****####***%%%#++**
***+==+***++++=----==-------------=+--=+*+*+++*#%%%%%%%%@%%%%%%##*+=:-------==+=====+==+*######*=***
+#*++**+======+===------------------==--+*#++++##%%%#%@@%%%%%%%%#**+=-------=++=--+#*****#**##****#*
*+++++======--=====---------------*+=--+++#==*#%%%#%*%%%%%%%%%%%##**+=---------==*******++==***++=*#
*+++++=+++=======-----------------+=****#**=+%@%*#%*#%%%%%%#%%%%%##**=-------=======--==+****+-=++*#
##****+-=+++*+===-----------::---=*+=+===*#+******#%##**#%%#%%%%%%%#*+=---------=========++=---++*##
###***++----=++====---------::::----*+***+*+*+##=+--=##*#*#*%%%%#%#%#*-----------======+=+----++++**
*********+=--=++===---------=+*#*#+=-=+#+%#***+-++#%%%%%%%%%%%%##%%%**=--------====+==++==----=**##+
##++*******+--=====---------=%%%%%%%%*+##%**%++*%%%%##%@@@@%%%%%%%%%#*=--------=-==++=====---=+*=+**
#*=--*#**#**=--:-===--------:-#%%*==#%%%=*===*%@@%#-:-*%%@%%#%%#%@%%#*---------=====++=+===--==+++=+
%#++=+******===--------------==+**+-*#%%*+=+%#%@@%#***#%%%#%%%@@@@%%*-----------===+=+==+===---=+**+
***++++****#**+=--===-------+%#*=*++**=+++###%%@%%%%#%##%%%@@@@@@%#*--::------======++=+=-:----=++++
*+***+++*#*#***+=-===--------*%%%#**#++**##*##%%%%%%%%%@@@@@@@%%%#+--------:-============----==+**=+
*++************+--===----:----*%*++++===++--**#%%%%%#%%@%@@%@%%%#-::::---------====---------=+++=+*%
##*+*********+========-------=++**+-==--==-=++*#%%%%####%%%%@@#*#-:---:----------------=----=+++++*%
###*********+--=====-=-------+*-=*=-++--++=+#++*%%#%#%#*%%%%%%%%*##+---=-:-------:-------====--+**+#
=+##**#*=-=+*+--===-------::=*=-+*-=#+-+#*-=%*==#%##%%%*#%%###%@%**%%#%*-*=++-=--=*-----===----++*+*
#####%%#*+=--*+==--==----:-*#--+#+=+#--+#*-=*%=+*#%#%%%##*#%%###%%#+%@%%%**#+#==#%=-:-*+-------=++++
%*#%%%###*+=-++====----+--#%--*#+-+%--=*%+-=*%+-=+%%#%%%##*#%%###%%#+%%%%%%*#%*+%#+=+%#*------==****
+*#####%#*+=--==---#+----+%*-*%#-+#*--+%%+-+#%#--+#%%#%@%#**#%%#*#%%*#%%%%%##*%%%**%%*%*#**+---=+++*
***####**++==---#===-----%%=+#%*-+#--=#%%=-*%%%=-=#%%#%%%#++#%%%##@%##%%@%%%@%%#*%#*#%%#*%###*+#***%
+**#***+++==-===----=++-*%%==#%=-++-=#%%%--*%%%*-=#%%*#%%#+*#%@%#*#@%**%%%%#%#%%%%%%%#%####*###***+#
+++++**+*=--++=+=*+=*+-+%#*-=##-+*==*#%%%-+#%%%#-+#%%**%%*=*%@@@#*+%%%#=*%%%%%%%%%%%%%%%#%##****+=*+
+*+++====--#*=-=*=*=:=%%##=-+*=-#*-*#%%%%-+#%%%*-*%%%++#%+-*#@@%%#*+#%%@%*=-=%%%%%%%%%######%#*++#+=
#*+====---=++***+-+#%#*#*+-+*-=*#+=*%%%%%=+#%%%=-*%%%+*#@*--*%%%@%#**%%%%%%%%#++#%%%@%%#*####**++*#%
**++==-=+++=*+-+%%#%**#*==+*-=#%%-+#%%%%%+=#%%#-=%%%%+*#%%+-=+%%%%%%#*#%%%%##%%%**%%%%%%#%##*****#+*
#*++=====*#*#+%%##*%%#+-+*=-=#%%*=*%%%%%%*=##%+-#%%%#+*%@%#+-=+*%%#%@@#**%%*#%%%%**%%%%%+##**+==*#*%
##++==+*++***#%###*%%=-*+--*%%%%*-*%#%%%%#+###=*%%%%++#%%%%%%==+++####%%%#*%%%%%%%*%%%%%+##*++==++*+
**++====+**#****+%#*-==-=*%%##%%#-*##%%%%*=*%*=#%%%%**#%%%%#%##********##%%*#%%%%%+%%%%%+##**+=-**##
+*+====+**###%%#%#=---+#%%*-+%%%%=*###%%%*=*%*=%%%%%*##%%%#*%%%%%%#***+++***+#%%%*=#%%%%+*###*+=*#++
*#+====++***#+-:-=*#%%@%#*--#%%%%++##*#%%*-*%*+%%%%%#*%%%%%#*#%%%%%%#%%%%%%%***%+*+#%%%%+*#=+=-=++++
**=======++--=*%%%%#**%%**=-#%#%%=+*%**%%#**%*+%%%%%##%%%%%#+**#%%##%##%*%##%@#*##+#%%%%+++-====+=++
#*=----===-=#%###+*=**%%*#==###%#-+#*++#%%+*##+#%%%%#**%%%%%%**++#%%@##%#@###*#%##+#%###+++=+++*****
**=-------+%%*=**+*=**##*%+=+###-=#%****%%#+#@+*%%@@#**%%%%%%%%#+++#@%#%%%*##**%%#**%###==*+**#*+***
+*=::----=#+==++*+*=+*##%%%++++-=##%*#*+#%%*#%#+*%%%%+*%%%%%%%%%%+++*%%%%*###**#%#++%###=+*******##*
***-:::--*+--==++++=++*#%#*%+-=#%%#%*#***%@#*%%*+*%@%**#%%#*%%%%%#*++*%%%*####*##**+#***+=*+#**++*#*
#**-:::--*=---=======*****##-*#**%##*%*+*%%%+*%#*+#%%#**+*%%%@%@%##%++######*##*#+*=#***=-+=+**+***+
*+%=::::-+=:---===--=+#*%#*-#%+==%%**##**%%%#+#*%*+*%#*+#%%%#%#%*#*%++*##%####*-*++=**+*=-+=+*++*++*
**#*-::::--::::------=**%#++%%#*-+**###**@#%%+#*%%#+*#*+##%%%%#%***#+*#######*+-+=+=*+++=-==+++++*++
**#%*-::::--::::::::--=+##+*%##%=*+*#*#+#@#%#*%+%%%**+**+*##%%*#+*+++*##***###*=+++-+*++=:==+++++*#+
++**#-::::::--::::::::-==+*=%#++-#*+**#**%##+*%+###*##++++*********+************+++-+*+=+:-===+++*##
#**+%+==::::::::::::::::--=+=***-+++**#**#*++#%+*#+*###*+=*###**+++*++**+********++-+**+=----==++***
#***@%%#-::::--==--==--::::=++=+-+++*+*++++*###=+*++####*==+#*+++++++++++++***+==+=-+**+=-:-----=+##
*##%%*+#*-:=****++**++==-:::-=-----=++*******##+**++*###*+==**++*+======+++++++-::=--+*+--:::::-:=*+
#*#@@%%*%#**#***##*#####*++=:::::::-=+*++*+++***+*++*###*++=+**+*+==---*%*-=++=--:--:=+=--:::::::=**
#%#%%@@%%%******########++===---::::=++++*+++**++++=+*#**++=+**+++==--=%%%*----:::-::-==-:::::::-+**
+*#%@@%%@%**##**#*##*##*+++***++---===+=++=+++++=+++*****+++++++++--:-=##%%=::::::::::--::::::::-**#
***#@%%%%@%*****+***#**#**+**+------====----=++++++=+**++==-==+**+---=+#*###=-:::::::::::::::::-+***
***####%#%@#:=*++++-+*+*++=+*+----------::------======+=-----===+=-:-+#*++++-::::=+*+---::::-::::-++
++*+*#####%%-:-++--=--++-----=+==------::::::::::-------::----------+**+-::---=+********+==+++=--=**
#**-:=+++***+::---------:--:::::---:-:::::::::::::::::::::::::::::::::-=++++****************##*##**#
###+=-:::--==-+**+*++=+++++====+%@#+==-=----:::::::---:::::-+++**+###*******#**+##*+**++####*#%%###+
***##******++++=---:-------+#%%%%%#+++*##++=++====++++++**+=-=+*+++*+-:-+++++++++++--+*++++****++++*
#**+#**++++#%%@@@%%#+==+*##**#%%#@@@%#*==+*+++=+++++*++======-:::--===++++=---======--=+*++=--==+**+
***=++#@@%%@%%*+#%%%%#**+=+====*#*#%%%**#*++=-=-======--::-+*++===+===+*++++*==++*##*-:::+#%%%%%##**
**+**+==+===+#*++=--=+*#*++*+=+**+*******++=-------=+++**##+*%#*++-=*#%%%##*#%%%%%%%%%##%%%%%%%%*+#*
***%#*++++==+*#%%%%#**###***+****++***##%%#+++++++++========++=--=**++*#%%%#*+*#%%%%%%%#%%%%%#%%%%#*
********+**+++++++++********+**+**+****+===++=+++++==-=+--:-+#%%%#%%%%%#*+=*#%#**#%%%%%%%%%%#%%%%%#+
***++*++++*+++**++*++*++**+*+++*++*++++++++*+++++***+*++**++*+*++++++*+*++++*++=+*+*++=++++===+=+***
***##**++***+**+*+++++**+*********+++**+*+**+++**++++++++++=++++=+++*++*++*+*+++=+*++++++++++++++++*)" << endl;
		exit(1);
	} 

	unfathomable_request = abs(unfathomable_request);
	cout << setfill('-') << setw(80) << ' ' << endl;
	cout << "The unrelenting celestial bestowed upon us " << unfathomable_request << " Savage Beings." << endl;
	cout << setfill('-') << setw(80) << ' ' << endl << endl;

	
	switch (unfathomable_request)
	{
	// Visions
	case 0:
	case 1:
		cout << "A firm vision takes hold. Blood, darkness, screams." << endl;
		cout << "This is not a figment of my imagination, but perhaps something else's." << endl;
		break;

	// Reality
	default:
		if (eradicate(unfathomable_request) == 1)
		{
			cout << "I find that I have completed my duty to my people." << endl;
			cout << "However, the horror that was branded over their faces upon my return proved one thing." << endl;
			cout << "I no longer share the kindred we once had." << endl;
		}
		else
		{
			cout << "My body's vitality has been forced to its termination" << endl;
			cout << "The reasons these beings were thrust upon our land remain hidden to me." << endl;
			cout << "As the Savages relinquish my being from my body," << endl;
			cout << "the real torment resides in my mind." << endl;
			cout << "Will my ancestors accept me in their final resting place." << endl;
			cout << "How sadistic it is to have the failure I have procured " << endl;
			cout << "be the last thing to be the lasting engraving on my soul." << endl;
		} 
		break;
	} // Switch
	
	/*******************************TESTING*******************************/
	/* This part of the code is unrelated to the assignmentand was used for testing
	
	// Test successful values
	cout << "Testing Successful Values" << endl;
	cout << "The number returned is: " << happy_number(19) << endl;
	cout << "The number returned is: " << happy_number(68) << endl;
	cout << "The number returned is: " << happy_number(82) << endl;
	cout << "The number returned is: " << happy_number(10) << endl;
	cout << "The number returned is: " << happy_number(100) << endl;
	cout << "The number returned is: " << happy_number(1000) << endl;
	cout << "The number returned is: " << happy_number(10000) << endl;
	cout << "The number returned is: " << happy_number(9100) << endl;

	// Test failing values
	cout << "Testing Failing Values" << endl;
	cout << "The number returned is: " << happy_number(4) << endl;
	cout << "The number returned is: " << happy_number(5) << endl;
	cout << "The number returned is: " << happy_number(29) << endl;
	cout << "The number returned is: " << happy_number(145) << endl;
	cout << "The number returned is: " << happy_number(81) << endl;
	cout << "The number returned is: " << happy_number(6) << endl;
	*/
	/*****************************END TESTING*****************************/
} // Main

